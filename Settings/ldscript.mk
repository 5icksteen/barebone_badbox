define LDSCRIPT
/* This linker script is automatically generated by the makefile. */

MEMORY {
    FLASH (xrw) : ORIGIN = $(ROM_START), LENGTH = $(ROM_SIZE)
    RAM (rw)    : ORIGIN = $(RAM_START) + 0x200, LENGTH = $(RAM_SIZE) - 0x200
}

SECTIONS {
/*------------------------------------------------------------------------------
 * FLASH Sections
------------------------------------------------------------------------------*/
    .vector : {
        KEEP(*(.stack_pointer))
        KEEP(*(.cortex_vectors))
        KEEP(*(.vendor_vectors))
    } >FLASH

    .text : {
        *(.text*)
        *(.rodata)
        *(.rodata*)
    } >FLASH

    .init_array : {
        . = ALIGN(4);
        __init_array_start = .;
        KEEP (*(SORT(.init_array.*)))
        KEEP (*(.init_array*))
        . = ALIGN(4);
        __init_array_end = .;
    } >FLASH

    .fini_array : {
        . = ALIGN(4);
        __fini_array_start = .;
        KEEP (*(SORT(.fini_array.*)))
        KEEP (*(.fini_array*))
        . = ALIGN(4);
        __fini_array_end = .;
    } >FLASH

    __data_load = .;

/*------------------------------------------------------------------------------
 * RAM Sections
------------------------------------------------------------------------------*/
   .data : AT(__data_load) {
        . = ALIGN(4);
        __data_start = .;
        *(.data*)
        . = ALIGN(4);
        __data_end = .;
    } >RAM

    .bss : {
        . = ALIGN(4);
        __bss_start = .;
        *(.bss*)
        *(COMMON)
        . = ALIGN(4);
        __bss_end = .;
    } >RAM
    .heap (NOLOAD) : ALIGN(8)
	{
		__heap_start = .;
        __heap_end = . + 0x1000;
	} > RAM

    __stack_top = ORIGIN(RAM) + LENGTH(RAM);
}

endef

.PHONY: all

all: $(OUTFILE)

$(OUTFILE):
	$(file >$@,$(LDSCRIPT))
